module Cas_adder (
    input  logic [16:0] input_data [16],
	 input  logic adder_enable,
	 output logic add_done,
    output logic [27:0] sum 
);
    logic [DATA_WIDTH+4:0] temp_data [N];
    logic [DATA_WIDTH+4:0] next_data [N];

    integer i, num_inputs, level, idx = 0;

    always_comb begin
        for (i = 0; i < N; i++)
            temp_data[i] = input_data[i];

        num_inputs = N;

        while (num_inputs > 1) begin
            idx = 0;

            for (i = 0; i < num_inputs-1; i += 2) begin
                next_data[idx] = temp_data[i] + temp_data[i+1];
                idx++;
            end

            if (num_inputs % 2 == 1) begin
                next_data[idx] = temp_data[num_inputs-1];
                idx++;
            end

            for (i = 0; i < idx; i++)
                temp_data[i] = next_data[i];

            num_inputs = idx;
        end

        sum = temp_data[0];
    end

endmodule

